ppb_multiplier = newppb,
Total_days_by_type = `day#s`,
Half_of_summer = half,
Expanded_total = totalsum) %>%
select(-carpeop, -buspeop) %>%
mutate(Start_time = str_replace(Start_time, "10000", "1000"),
Start_time = as.numeric(Start_time)) %>%
mutate(Usage_class = ifelse(Usage_class == 1, 'High',
ifelse(Usage_class == 2, 'Medium', 'Low'))) %>%
mutate(Start_time = format(strptime(substr(as.POSIXct(sprintf("%04.f", as.numeric(Start_time)), format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')) %>%
mutate(Day_type = ifelse(Day_type == 1, 'Weekend_holiday', 'Weekday'))
x2018 <- step_VI %>%
mutate(Year = 2018) %>%
mutate(Entrance = as.numeric(Entrance),
Bikers = as.numeric(Bikers),
Peds_skaters = as.numeric(Peds_skaters),
Vehicles = as.numeric(Vehicles),
Buses = as.numeric(Buses),
Boaters = as.numeric(Boaters),
Horse_riders = as.numeric(Horse_riders))
x2015_2018 <- bind_rows(x2015_2017, x2018)
x2018_tidy <- x2018 %>%
gather(Bikers, Boaters, Buses, Horse_riders, Peds_skaters, Vehicles, key = 'Visitor Category', value = 'Visitors')
write_csv(x2018_tidy, 'Raw Summer 2018 Counts Gathered - Outliers Untreated.csv')
write_csv(x2018, 'Raw Summer 2018 Counts - Outliers Untreated.csv')
View(x2018_tidy)
View(x2015_2018)
View(park_ids)
View(x2015_2017)
x2015_17_ids <- left_join(x2015_2017, park_ids, by = c('Park_id', 'Agency_id'))
View(x2015_2017)
View(x2015_17_ids)
x2015_2018 <- bind_rows(x2015_17_ids, x2018)
View(x2015_2018)
x2018 <- step_VI %>%
mutate(Year = 2018) %>%
mutate(Entrance = as.numeric(Entrance),
Bikers = as.numeric(Bikers),
Peds_skaters = as.numeric(Peds_skaters),
Vehicles = as.numeric(Vehicles),
Buses = as.numeric(Buses),
Boaters = as.numeric(Boaters),
Horse_riders = as.numeric(Horse_riders)) %>%
rename(Park_name = Park_trail)
x2015_2018 <- bind_rows(x2015_17_ids, x2018)
# write_csv(x2018_tidy, 'Raw Summer 2018 Counts Gathered - Outliers Untreated.csv')
# write_csv(x2018, 'Raw Summer 2018 Counts - Outliers Untreated.csv')
write_csv(x2015_2018, '2015 to 2018 Expanded Totals - Prior to Averaging.csv')
View(x2015_17_ids)
View(park_ids)
setwd('Datasets/2013-2017')
x2014_2017 <- read_csv('2014-2017 Data.csv')
x2015_2017 <- x2014_2017 %>%
mutate(Least_recent_year = min(Year)) %>%
filter(Year != Least_recent_year) %>% # Filter down to three most recent years of data
select(-Least_recent_year) %>%
separate(gooddate, into = c('Month', 'Day'), sep = 1) %>%
mutate(Year_for_date = Year) %>%
unite(Date, Month, Day, Year_for_date, sep = '-') %>%
mutate(Date = as_date(mdy(Date)),
Park = ifelse(Park == 121, 116, Park),
agency = ifelse(agency == 6 & Park == 63, 7, agency)) %>%
rename(Agency_id = agency,
Park_id = Park,
Bikers = Biker,
Peds_skaters = Pedskat,
Boaters = Boat,
Vehicles = Vehicle,
Buses = Bus,
Horse_riders = Horse,
Usage_class = samclass,
Total_visitors = totalall,
Day_type = daytype,
Start_time = orgstart,
Expansion_factor = expfact,
ppv_multiplier = new2008ppv,
ppb_multiplier = newppb,
Total_days_by_type = `day#s`,
Half_of_summer = half,
Expanded_total = totalsum) %>%
select(-carpeop, -buspeop) %>%
mutate(Start_time = str_replace(Start_time, "10000", "1000"),
Start_time = as.numeric(Start_time)) %>%
mutate(Usage_class = ifelse(Usage_class == 1, 'High',
ifelse(Usage_class == 2, 'Medium', 'Low'))) %>%
mutate(Start_time = format(strptime(substr(as.POSIXct(sprintf("%04.f", as.numeric(Start_time)), format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')) %>%
mutate(Day_type = ifelse(Day_type == 1, 'Weekend_holiday', 'Weekday'))
x2015_17_ids <- left_join(x2015_2017, park_ids, by = c('Park_id', 'Agency_id'))
x2018 <- step_VI %>%
mutate(Year = 2018) %>%
mutate(Entrance = as.numeric(Entrance),
Bikers = as.numeric(Bikers),
Peds_skaters = as.numeric(Peds_skaters),
Vehicles = as.numeric(Vehicles),
Buses = as.numeric(Buses),
Boaters = as.numeric(Boaters),
Horse_riders = as.numeric(Horse_riders)) %>%
rename(Park_name = Park_trail)
x2015_2018 <- bind_rows(x2015_17_ids, x2018)
x2018_tidy <- x2018 %>%
gather(Bikers, Boaters, Buses, Horse_riders, Peds_skaters, Vehicles, key = 'Visitor Category', value = 'Visitors')
# write_csv(x2018_tidy, 'Raw Summer 2018 Counts Gathered - Outliers Untreated.csv')
# write_csv(x2018, 'Raw Summer 2018 Counts - Outliers Untreated.csv')
write_csv(x2015_2018, '2015 to 2018 Expanded Totals - Prior to Averaging.csv')
# Import needed indices
setwd('Datasets/Indices')
park_ids <- read_csv('Park and Agency Codes Index.csv') # For Step 2
entrance_classifications <- read_csv('2018 Entrance Usage Classifications Index.csv') # For Step 3 & 5
bus_vehicle_multipliers <- read_csv('Bus and Vehicle Multipliers Index.csv') # For Step 4
setwd('Datasets/2013-2017')
x2014_2017 <- read_csv('2014-2017 Data.csv')
x2015_2017 <- x2014_2017 %>%
mutate(Least_recent_year = min(Year)) %>%
filter(Year != Least_recent_year) %>% # Filter down to three most recent years of data
select(-Least_recent_year) %>%
separate(gooddate, into = c('Month', 'Day'), sep = 1) %>%
mutate(Year_for_date = Year) %>%
unite(Date, Month, Day, Year_for_date, sep = '-') %>%
mutate(Date = as_date(mdy(Date)),
Park = ifelse(Park == 121, 116, Park),
agency = ifelse(agency == 6 & Park == 63, 7, agency)) %>%
rename(Agency_id = agency,
Park_id = Park,
Bikers = Biker,
Peds_skaters = Pedskat,
Boaters = Boat,
Vehicles = Vehicle,
Buses = Bus,
Horse_riders = Horse,
Usage_class = samclass,
Total_visitors = totalall,
Day_type = daytype,
Start_time = orgstart,
Expansion_factor = expfact,
ppv_multiplier = new2008ppv,
ppb_multiplier = newppb,
Total_days_by_type = `day#s`,
Half_of_summer = half,
Expanded_total = totalsum) %>%
select(-carpeop, -buspeop) %>%
mutate(Start_time = str_replace(Start_time, "10000", "1000"),
Start_time = as.numeric(Start_time)) %>%
mutate(Usage_class = ifelse(Usage_class == 1, 'High',
ifelse(Usage_class == 2, 'Medium', 'Low'))) %>%
mutate(Start_time = format(strptime(substr(as.POSIXct(sprintf("%04.f", as.numeric(Start_time)), format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')) %>%
mutate(Day_type = ifelse(Day_type == 1, 'Weekend_holiday', 'Weekday'))
x2015_17_ids <- left_join(x2015_2017, park_ids, by = c('Park_id', 'Agency_id'))
x2018 <- step_VI %>%
mutate(Year = 2018) %>%
mutate(Entrance = as.numeric(Entrance),
Bikers = as.numeric(Bikers),
Peds_skaters = as.numeric(Peds_skaters),
Vehicles = as.numeric(Vehicles),
Buses = as.numeric(Buses),
Boaters = as.numeric(Boaters),
Horse_riders = as.numeric(Horse_riders)) %>%
rename(Park_name = Park_trail)
x2015_2018 <- bind_rows(x2015_17_ids, x2018)
x2018_tidy <- x2018 %>%
gather(Bikers, Boaters, Buses, Horse_riders, Peds_skaters, Vehicles, key = 'Visitor Category', value = 'Visitors')
# write_csv(x2018_tidy, 'Raw Summer 2018 Counts Gathered - Outliers Untreated.csv')
# write_csv(x2018, 'Raw Summer 2018 Counts - Outliers Untreated.csv')
write_csv(x2015_2018, '2015 to 2018 Expanded Totals - Prior to Averaging.csv')
View(x2015_2018)
x2015_2018 %>%
filter(is.na(Year))
View(x2015_2018)
library(tidyverse)
setwd('Results')
summer_estimates <- read_csv('Summer Visitor Use Estimates Aggregated by Park, As Percentages, De-duplicated.csv')
summer_estimates_2018 <- summer_estimates %>%
filter(Year == 2018)
setwd('..')
setwd('Datasets/Special Events and Camping')
parks <- list.files(pattern = '*.csv')
make_names <- function(name_vector) {
name_vector_df <- as.data.frame(name_vector)
new_names <- name_vector_df %>%
rename(Agency_name = 1) %>%
mutate(Agency_name = str_replace_all(Agency_name, c('2018 ' = '', ' ' = '_', '-' = '_', '\\.csv' = '')))
new_names_list <- as.list(new_names)
return(new_names_list$Agency_name)
}
list2env(map(set_names(parks, make_names(parks)), read_csv), envir = .GlobalEnv)
events_camping <- bind_rows(Anoka_County_Events_Camping, Bloomington_Events_Camping, Carver_County_Events_Camping, Dakota_County_Events_Camping, MPRB_Events_Camping, Ramsey_County_Events_Camping, Saint_Paul_Events_Camping, TRPD_Events_Camping, TRPD_Scott_Events_Camping, Washington_County_Events_Camping)
setwd('.')
setwd('Datasets/Indices')
setwd('Datasets/Indices')
seasonal_multipliers <- read_csv('Seasonal Multipliers.csv')
park_agency_codes <- read_csv('Park and Agency Codes Index.csv')
summer_estimates_agency <- left_join(summer_estimates_2018, park_agency_codes, by = c('Park_id', 'Park_name'))
estimates_events_camping <- full_join(summer_estimates_agency, events_camping, by = c('Park_name', 'Agency_name'))
estimates_events_camping_seasons <- left_join(estimates_events_camping, seasonal_multipliers, by = c('Park_name', 'Agency_name'))
annual_estimates <- estimates_events_camping_seasons %>%
mutate(Winter_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 0.371,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Winter_multiplier))),
Spring_Fall_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 1.444,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Spring_Fall_multiplier))),
Event_visitors = ifelse(is.na(Event_visitors), 0, Event_visitors),
Camping_visitors = ifelse(is.na(Camping_visitors), 0, Camping_visitors),
Walk_in_visits = ifelse(is.na(Walk_in_visits), 0, Walk_in_visits),
Summer_total_by_park = ifelse(is.na(Summer_total_by_park), 0, Summer_total_by_park),
Enterprise_operation_visits = ifelse(is.na(Enterprise_operation_visits), 0, Enterprise_operation_visits)) %>%
mutate(Annual_estimate = Summer_total_by_park + Summer_total_by_park*Winter_multiplier + Summer_total_by_park*Spring_Fall_multiplier + Event_visitors + Camping_visitors + Walk_in_visits - Enterprise_operation_visits) %>%
mutate(Agency_name = ifelse(Park_name == 'Cleary Lake Regional Park (Scott County)' | Park_name == 'Murphy-Hanrehan Park Reserve (Scott County)', 'Three Rivers Park District - Scott', Agency_name))
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100)
View(annual_estimates)
library(tidyverse)
setwd('Results')
summer_estimates <- read_csv('Summer Visitor Use Estimates Aggregated by Park, As Percentages, De-duplicated.csv')
summer_estimates_2018 <- summer_estimates %>%
filter(Year == 2018)
setwd('..')
setwd('Datasets/Special Events and Camping')
parks <- list.files(pattern = '*.csv')
make_names <- function(name_vector) {
name_vector_df <- as.data.frame(name_vector)
new_names <- name_vector_df %>%
rename(Agency_name = 1) %>%
mutate(Agency_name = str_replace_all(Agency_name, c('2018 ' = '', ' ' = '_', '-' = '_', '\\.csv' = '')))
new_names_list <- as.list(new_names)
return(new_names_list$Agency_name)
}
list2env(map(set_names(parks, make_names(parks)), read_csv), envir = .GlobalEnv)
events_camping <- bind_rows(Anoka_County_Events_Camping, Bloomington_Events_Camping, Carver_County_Events_Camping, Dakota_County_Events_Camping, MPRB_Events_Camping, Ramsey_County_Events_Camping, Saint_Paul_Events_Camping, TRPD_Events_Camping, TRPD_Scott_Events_Camping, Washington_County_Events_Camping)
setwd('.')
setwd('Datasets/Indices')
seasonal_multipliers <- read_csv('Seasonal Multipliers.csv')
setwd('Datasets/Indices')
seasonal_multipliers <- read_csv('Seasonal Multipliers.csv')
park_agency_codes <- read_csv('Park and Agency Codes Index.csv')
estimates_events_camping <- full_join(summer_estimates_agency, events_camping, by = c('Park_name', 'Agency_name'))
estimates_events_camping_seasons <- left_join(estimates_events_camping, seasonal_multipliers, by = c('Park_name', 'Agency_name'))
annual_estimates <- estimates_events_camping_seasons %>%
mutate(Winter_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 0.371,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Winter_multiplier))),
Spring_Fall_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 1.444,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Spring_Fall_multiplier))),
Event_visitors = ifelse(is.na(Event_visitors), 0, Event_visitors),
Camping_visitors = ifelse(is.na(Camping_visitors), 0, Camping_visitors),
Walk_in_visits = ifelse(is.na(Walk_in_visits), 0, Walk_in_visits),
Summer_total_by_park = ifelse(is.na(Summer_total_by_park), 0, Summer_total_by_park),
Enterprise_operation_visits = ifelse(is.na(Enterprise_operation_visits), 0, Enterprise_operation_visits)) %>%
mutate(Annual_estimate = Summer_total_by_park + Summer_total_by_park*Winter_multiplier + Summer_total_by_park*Spring_Fall_multiplier + Event_visitors + Camping_visitors + Walk_in_visits - Enterprise_operation_visits) %>%
mutate(Agency_name = ifelse(Park_name == 'Cleary Lake Regional Park (Scott County)' | Park_name == 'Murphy-Hanrehan Park Reserve (Scott County)', 'Three Rivers Park District - Scott', Agency_name))
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100)
annual_estimates <- estimates_events_camping_seasons %>%
mutate(Winter_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 0.371,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Winter_multiplier))),
Spring_Fall_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 1.444,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Spring_Fall_multiplier))),
Event_visitors = ifelse(is.na(Event_visitors), 0, Event_visitors),
Camping_visitors = ifelse(is.na(Camping_visitors), 0, Camping_visitors),
Walk_in_visits = ifelse(is.na(Walk_in_visits), 0, Walk_in_visits),
Summer_total_by_park = ifelse(is.na(Summer_total_by_park), 0, Summer_total_by_park),
Enterprise_operation_visits = ifelse(is.na(Enterprise_operation_visits), 0, Enterprise_operation_visits)) %>%
mutate(Annual_estimate = Summer_total_by_park + Summer_total_by_park*Winter_multiplier + Summer_total_by_park*Spring_Fall_multiplier + Event_visitors*1000 + Camping_visitors*1000 + Walk_in_visits*1000 - Enterprise_operation_visits*1000) %>%
mutate(Agency_name = ifelse(Park_name == 'Cleary Lake Regional Park (Scott County)' | Park_name == 'Murphy-Hanrehan Park Reserve (Scott County)', 'Three Rivers Park District - Scott', Agency_name))
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100)
write_csv(annual_estimates, 'Estimate of 2018 Usage of Regional Parks and Trails at Park-Trail Level.csv')
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100)
View(annual_estimates_agency)
setwd('Datasets/2013-2017')
annual_estimates <- list.files(pattern = '*.csv')
# make_names <- function(name_vector) {
#
#   name_vector_df <- as.data.frame(name_vector)
#
#  new_names <- name_vector_df %>%
#    rename(Agency_name = 1) %>%
#    mutate(Agency_name = str_replace_all(Agency_name, c('2018 ' = '', ' ' = '_', '-' = '_', '\\.csv' = '')))
#
#  new_names_list <- as.list(new_names)
#
#  return(new_names_list$Agency_name)
# }
list2env(map(set_names(annual_estimates, make_names(annual_estimates)), read_csv), envir = .GlobalEnv)
setwd('Datasets/2013-2017/Annual Use Estimates')
annual_estimates <- list.files(pattern = '*.csv')
# make_names <- function(name_vector) {
#
#   name_vector_df <- as.data.frame(name_vector)
#
#  new_names <- name_vector_df %>%
#    rename(Agency_name = 1) %>%
#    mutate(Agency_name = str_replace_all(Agency_name, c('2018 ' = '', ' ' = '_', '-' = '_', '\\.csv' = '')))
#
#  new_names_list <- as.list(new_names)
#
#  return(new_names_list$Agency_name)
# }
list2env(map(set_names(annual_estimates, make_names(annual_estimates)), read_csv), envir = .GlobalEnv)
View(`2013_Annual_Use_Estimates`)
annual_estimates_13_18 <- bind_rows(`2013_Annual_Use_Estimates`, `2014_Annual_Use_Estimates`, `2015_Annual_Use_Estimates`, `2016_Annual_Use_Estimates`, `2017_Annual_Use_Estimates`, annual_estimates_agency)
annual_estimates_13_18 <- bind_rows(`2013_Annual_Use_Estimates`, `2015_Annual_Use_Estimates`, `2016_Annual_Use_Estimates`, `2017_Annual_Use_Estimates`, annual_estimates_agency)
View(`2013_Annual_Use_Estimates`)
View(`2015_Annual_Use_Estimates`)
View(`2016_Annual_Use_Estimates`)
View(`2017_Annual_Use_Estimates`)
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100) %>%
select(Agency_name, Annual_estimate_agency, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Estimate_in_thousands = Annual_estimate_agency,
Percent = Percentage_of_total_regional_visits)
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100) %>%
select(Agency_name, Annual_estimate_agency, Percentage_of_total_regional_visits)
annual_estimates <- estimates_events_camping_seasons %>%
mutate(Winter_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 0.371,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Winter_multiplier))),
Spring_Fall_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 1.444,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Spring_Fall_multiplier))),
Event_visitors = ifelse(is.na(Event_visitors), 0, Event_visitors),
Camping_visitors = ifelse(is.na(Camping_visitors), 0, Camping_visitors),
Walk_in_visits = ifelse(is.na(Walk_in_visits), 0, Walk_in_visits),
Summer_total_by_park = ifelse(is.na(Summer_total_by_park), 0, Summer_total_by_park),
Enterprise_operation_visits = ifelse(is.na(Enterprise_operation_visits), 0, Enterprise_operation_visits)) %>%
mutate(Annual_estimate = Summer_total_by_park + Summer_total_by_park*Winter_multiplier + Summer_total_by_park*Spring_Fall_multiplier + Event_visitors*1000 + Camping_visitors*1000 + Walk_in_visits*1000 - Enterprise_operation_visits*1000) %>%
mutate(Agency_name = ifelse(Park_name == 'Cleary Lake Regional Park (Scott County)' | Park_name == 'Murphy-Hanrehan Park Reserve (Scott County)', 'Three Rivers Park District - Scott', Agency_name))
#write_csv(annual_estimates, 'Estimate of 2018 Usage of Regional Parks and Trails at Park-Trail Level.csv')
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100) %>%
select(Agency_name, Annual_estimate_agency, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Estimate_in_thousands = Annual_estimate_agency,
Percent = Percentage_of_total_regional_visits)
setwd('Datasets/2013-2017/Annual Use Estimates')
annual_estimates <- list.files(pattern = '*.csv')
list2env(map(set_names(annual_estimates, make_names(annual_estimates)), read_csv), envir = .GlobalEnv)
annual_estimates_13_18 <- bind_rows(`2013_Annual_Use_Estimates`, `2015_Annual_Use_Estimates`, `2016_Annual_Use_Estimates`, `2017_Annual_Use_Estimates`, annual_estimates_agency)
View(annual_estimates_agency)
View(annual_estimates_13_18)
write_csv(annual_estimates_13_18, 'Annual Use Estimates 2013 to 2018.csv')
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100) %>%
select(Agency_name, Annual_estimate_agency, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Estimate_in_thousands = Annual_estimate_agency,
Percent = Percentage_of_total_regional_visits) %>%
mutate(Year = 2018)
annual_estimates <- estimates_events_camping_seasons %>%
mutate(Winter_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 0.371,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Winter_multiplier))),
Spring_Fall_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 1.444,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Spring_Fall_multiplier))),
Event_visitors = ifelse(is.na(Event_visitors), 0, Event_visitors),
Camping_visitors = ifelse(is.na(Camping_visitors), 0, Camping_visitors),
Walk_in_visits = ifelse(is.na(Walk_in_visits), 0, Walk_in_visits),
Summer_total_by_park = ifelse(is.na(Summer_total_by_park), 0, Summer_total_by_park),
Enterprise_operation_visits = ifelse(is.na(Enterprise_operation_visits), 0, Enterprise_operation_visits)) %>%
mutate(Annual_estimate = Summer_total_by_park + Summer_total_by_park*Winter_multiplier + Summer_total_by_park*Spring_Fall_multiplier + Event_visitors*1000 + Camping_visitors*1000 + Walk_in_visits*1000 - Enterprise_operation_visits*1000) %>%
mutate(Agency_name = ifelse(Park_name == 'Cleary Lake Regional Park (Scott County)' | Park_name == 'Murphy-Hanrehan Park Reserve (Scott County)', 'Three Rivers Park District - Scott', Agency_name))
#write_csv(annual_estimates, 'Estimate of 2018 Usage of Regional Parks and Trails at Park-Trail Level.csv')
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Annual_estimate_agency = sum(Annual_estimate)) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Annual_estimate_agency),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100) %>%
select(Agency_name, Annual_estimate_agency, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Estimate_in_thousands = Annual_estimate_agency,
Percent = Percentage_of_total_regional_visits) %>%
mutate(Year = 2018)
setwd('Datasets/2013-2017/Annual Use Estimates')
annual_estimates <- list.files(pattern = '*.csv')
list2env(map(set_names(annual_estimates, make_names(annual_estimates)), read_csv), envir = .GlobalEnv)
annual_estimates_13_18 <- bind_rows(`2013_Annual_Use_Estimates`, `2015_Annual_Use_Estimates`, `2016_Annual_Use_Estimates`, `2017_Annual_Use_Estimates`, annual_estimates_agency)
write_csv(annual_estimates_13_18, 'Annual Use Estimates 2013 to 2018.csv')
View(annual_estimates_13_18)
write_csv(annual_estimates_13_18, 'Annual Use Estimates 2013 to 2018.csv')
View(annual_estimates_agency)
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Estimate_in_thousands = sum(Annual_estimate)/1000) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Estimate_in_thousands),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100,
Agency_name = ifelse(Agency_name == 'Three Rivers Park District', 'Three Rivers Park District - Hennepin',
ifelse(Agency_name == 'Minneapolis Park and Recreation Board', 'Minneapolis Park & Recreation Board', Agency_name))) %>%
select(Agency_name, Estimate_in_thousands, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Percent = Percentage_of_total_regional_visits) %>%
mutate(Year = 2018)
annual_estimates <- estimates_events_camping_seasons %>%
mutate(Winter_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 0.371,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Winter_multiplier))),
Spring_Fall_multiplier = ifelse(Park_name == 'Nokomis-Minnesota River Bluffs Regional Trail' | Park_name == 'Point Douglas Regional Trail', 1.444,
ifelse(Park_name == 'Lake Minnetonka Islands' | Park_name == 'The Landing Special Recreation Feature', 0, as.numeric(Spring_Fall_multiplier))),
Event_visitors = ifelse(is.na(Event_visitors), 0, Event_visitors),
Camping_visitors = ifelse(is.na(Camping_visitors), 0, Camping_visitors),
Walk_in_visits = ifelse(is.na(Walk_in_visits), 0, Walk_in_visits),
Summer_total_by_park = ifelse(is.na(Summer_total_by_park), 0, Summer_total_by_park),
Enterprise_operation_visits = ifelse(is.na(Enterprise_operation_visits), 0, Enterprise_operation_visits)) %>%
mutate(Annual_estimate = Summer_total_by_park + Summer_total_by_park*Winter_multiplier + Summer_total_by_park*Spring_Fall_multiplier + Event_visitors*1000 + Camping_visitors*1000 + Walk_in_visits*1000 - Enterprise_operation_visits*1000) %>%
mutate(Agency_name = ifelse(Park_name == 'Cleary Lake Regional Park (Scott County)' | Park_name == 'Murphy-Hanrehan Park Reserve (Scott County)', 'Three Rivers Park District - Scott', Agency_name))
#write_csv(annual_estimates, 'Estimate of 2018 Usage of Regional Parks and Trails at Park-Trail Level.csv')
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Estimate_in_thousands = sum(Annual_estimate)/1000) %>%
select(Agency_name, Annual_estimate_agency) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Estimate_in_thousands),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100,
Agency_name = ifelse(Agency_name == 'Three Rivers Park District', 'Three Rivers Park District - Hennepin',
ifelse(Agency_name == 'Minneapolis Park and Recreation Board', 'Minneapolis Park & Recreation Board', Agency_name))) %>%
select(Agency_name, Estimate_in_thousands, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Percent = Percentage_of_total_regional_visits) %>%
mutate(Year = 2018)
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Estimate_in_thousands = sum(Annual_estimate)/1000) %>%
select(Agency_name, Estimate_in_thousands) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Estimate_in_thousands),
Percentage_of_total_regional_visits = Annual_estimate_agency/Total_regional_visits*100,
Agency_name = ifelse(Agency_name == 'Three Rivers Park District', 'Three Rivers Park District - Hennepin',
ifelse(Agency_name == 'Minneapolis Park and Recreation Board', 'Minneapolis Park & Recreation Board', Agency_name))) %>%
select(Agency_name, Estimate_in_thousands, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Percent = Percentage_of_total_regional_visits) %>%
mutate(Year = 2018)
annual_estimates_agency <- annual_estimates %>%
group_by(Agency_name) %>%
mutate(Estimate_in_thousands = sum(Annual_estimate)/1000) %>%
select(Agency_name, Estimate_in_thousands) %>%
unique() %>%
ungroup() %>%
mutate(Total_regional_visits = sum(Estimate_in_thousands),
Percentage_of_total_regional_visits = Estimate_in_thousands/Total_regional_visits*100,
Agency_name = ifelse(Agency_name == 'Three Rivers Park District', 'Three Rivers Park District - Hennepin',
ifelse(Agency_name == 'Minneapolis Park and Recreation Board', 'Minneapolis Park & Recreation Board', Agency_name))) %>%
select(Agency_name, Estimate_in_thousands, Percentage_of_total_regional_visits) %>%
rename(Agency = Agency_name,
Percent = Percentage_of_total_regional_visits) %>%
mutate(Year = 2018)
annual_estimates_13_18 <- bind_rows(`2013_Annual_Use_Estimates`, `2015_Annual_Use_Estimates`, `2016_Annual_Use_Estimates`, `2017_Annual_Use_Estimates`, annual_estimates_agency)
write_csv(annual_estimates_13_18, 'Annual Use Estimates 2013 through 2018.csv')
View(agencies_bound)
library(haven)
setwd('Datasets/2013-2017/')
counts_14_17 <- read_sav('2014-2017 data FINAL._original.sav')
View(counts_14_17)
View(x2015_2018)
x2015_2018 %>%
filter(Park_name == 'Lake Minnewashta Regional Park' & Year == 2018 & Expanded_total > 70000)
x2015_2018 %>%
filter(Park_name == 'Minneapolis Chain of Lakes Regional Parks' & Year == 2018 & Expanded_total > 200000)
x2015_2018 %>%
filter(Park_name == 'Minneapolis Chain of Lakes Regional Park' & Year == 2018 & Expanded_total > 2000000)
x2015_2018 %>%
filter(is.na(Usage_class))
