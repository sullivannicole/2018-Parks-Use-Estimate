ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800))))
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time))))
write_csv(all_agencies_class_tidy, '2018 Entrance Usage Classification Index.csv')
setwd('Datasets/Indices')
entrance_classifications <- read_csv('2018 Entrance Usage Classification Index.csv')
entrance_class_join <- entrance_classifications %>%
mutate(Entrance = as.character(Entrance)) %>%
mutate(Start_time = format(strptime(substr(as.POSIXct(sprintf("%04.f", as.numeric(Start_time)), format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p'))
step_III <- left_join(step_IIa, entrance_class_join, by = c('Park_id' = 'Park_trail', 'Entrance' = 'Entrance', 'Start_time' = 'Start_time', 'Day_type' = 'Day_type'))
missing_class_assignment <- step_III %>%
filter(is.na(Usage_class)) %>%
group_by(Park_trail, Agency_name, Start_time, Entrance) %>%
count()
View(missing_class_assignment)
missing_class_assignment %>%
mutate(tot_errors = sum(n))
missing_class_assignment %>%
ungroup() %>%
mutate(tot_errors = sum(n))
setwd('Datasets/Indices')
# Import tidy park multipliers data frame
park_multipliers <- read_csv('Park Multipliers Index.csv')
# Join multipliers to parks to use to calculate total number of visitors in sample (step 7 syntax)
park_multipliers <- park_multipliers %>%
mutate(Park = as.numeric(Park))
step_IV <- left_join(step_III, park_multipliers, by = ('Park'))
step_IV <- left_join(step_III, park_multipliers, by = ('Park_id' = 'Park'))
step_IV <- left_join(step_III, park_multipliers, by = c('Park_id' = 'Park'))
View(step_IV)
View(step_III)
step_III_dups <- step_III %>%
group_by(Park_id, Date, Start_time, Entrance) %>%
count()
View(step_III_dups)
step_III_dups <- step_III %>%
group_by(Park_id, Date, Start_time, Entrance) %>%
count() %>%
filter(n > 1)
View(step_III_dups)
step_III_dups_full <- inner_join(step_III, step_III_dups, by = c('Park_id', 'Date', 'Start_time', 'Entrance'))
View(step_III_dups_full)
agencies_bound %>%
filter(Park_trail == 'Nokomis-Minnesota River Bluffs Regional Trail' & Date == '2018-07-21')
agencies_bound %>%
filter(Park_trail == 'Nokomis-Minnesota River Bluffs Regional Trail' & Month == 'July' & Day == '21')
step_III_dups <- step_III %>%
group_by(Park_id, Date, Start_time, Entrance, ResponseId) %>%
count() %>%
filter(n > 1)
step_III_dups_full <- inner_join(step_III, step_III_dups, by = c('Park_id', 'Date', 'Start_time', 'Entrance'))
View(step_III_dups_full)
step_III_dups_full <- inner_join(step_III, step_III_dups, by = c('Park_id', 'Date', 'Start_time', 'Entrance', 'ResponseId'))
View(agencies_class_tidy)
View(all_agencies_class_tidy)
all_agencies_class_tidy %>%
filter(Park_trail == 17 & Start_time == '04:00 PM' & Day_type == 'Weekend_holiday')
all_agencies_class_tidy %>%
filter(Park_trail == 17 & Start_time == '04:00 PM' & Day_type == 'Weekend_holiday')
View(all_agencies_class_tidy)
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time))))
mutate(Start_time = format(strptime(substr(as.POSIXct(sprintf("%04.f", as.numeric(Start_time)), format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')) %>%
mutate(Start_time = as.factor(Start_time))
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time)))) %>%
mutate(Start_time = format(strptime(substr(as.POSIXct(sprintf("%04.f", as.numeric(Start_time)), format="%H%M"), 12, 16), '%H:%M'), '%I:%M %p')) %>%
mutate(Start_time = as.factor(Start_time))
all_agencies_class_tidy %>%
filter(Park_trail == 17 & Start_time == 1600 & Day_type == 'Weekend_holiday')
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time))))
all_agencies_class_tidy %>%
filter(Park_trail == 17 & Start_time == 1600 & Day_type == 'Weekend_holiday')
entrance_class_join %>%
filter(Park_trail == 17 & Start_time == '04:00 PM')
entrance_class_join %>%
filter(Park_trail == 17 & Start_time == '04:00 PM' & Day_type == 'Weekend_holiday')
agencies_bound %>%
filter(Park_trail == 'Lebanon Hills Regional Park' & Month == 'July' & Day == '15')
View(Carver_County)
# Create dataframe with both day types for every park - specify day-type for join
Weekend_holiday <- c(1:140)
Weekday <- c(1:140)
Parks_day_types <- stack(mget(c('Weekend_holiday', 'Weekday'))) %>% rename(Park_trail = values, Day_type = ind)
# Tidy workbooks
tidy_sample_class_wkbk <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
df_final <- left_join(df_tidy, Parks_day_types, by = c('Park_trail'))
}
# Ensure n always equals 12 (6 timeslots for weekend/holidays, 6 timeslots for weekdays)
check_count <- function(df) {
df %>%
group_by(Park_trail, Entrance) %>%
count() %>%
filter(n != 12)
}
setwd('Datasets/Former Class Workbooks/')
parks_classes_18 <- list.files(pattern = '*.csv')
list2env(map(set_names(parks_classes_18, gsub('.csv$', '', parks_classes_18)), read_csv), envir = .GlobalEnv)
all_agencies_classes <- list(Anoka_County, Bloomington, Carver_County, Dakota_County, Minneapolis_Park_and_Recreation_Board, Saint_Paul, Scott_County, Three_Rivers_Park_District, Washington_County)
agencies_class_tidy <- map(all_agencies_classes, tidy_sample_class_wkbk)
agencies_class_bound <- do.call(bind_rows, agencies_class_tidy)
Ramsey_County_Weekday_I <- Ramsey_County_Weekday %>%
mutate(Day_type = 'Weekday')
Ramsey_County_Weekend_I <- Ramsey_County_Weekend %>%
mutate(Day_type = 'Weekend_holiday')
tidy_ramsey_sample_class <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
}
ramsey_classes <- list(Ramsey_County_Weekday_I, Ramsey_County_Weekend_I)
ramsey_class_tidy <- map(ramsey_classes, tidy_ramsey_sample_class)
ramsey_class_bound <- do.call(bind_rows, ramsey_class_tidy)
all_agencies_class_bound <- bind_rows(agencies_class_bound, ramsey_class_bound)
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time))))
all_agencies_class_tidy %>%
filter(Park_trail == 17 & Start_time == 1600 & Day_type == 'Weekend_holiday')
all_agencies_class_tidy %>%
group_by(Park_trial, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n >1)
all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
entrances_with_multiple_designations <- all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
View(entrances_with_multiple_designations)
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time)))) %>%
filter(!is.na(Park_trail))
entrances_with_multiple_designations <- all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
View(index)
# Create dataframe with both day types for every park - specify day-type for join
Weekend_holiday <- c(1:140)
Weekday <- c(1:140)
Parks_day_types <- stack(mget(c('Weekend_holiday', 'Weekday'))) %>% rename(Park_trail = values, Day_type = ind)
# Tidy workbooks
tidy_sample_class_wkbk <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
df_final <- left_join(df_tidy, Parks_day_types, by = c('Park_trail'))
}
# Ensure n always equals 12 (6 timeslots for weekend/holidays, 6 timeslots for weekdays)
check_count <- function(df) {
df %>%
group_by(Park_trail, Entrance) %>%
count() %>%
filter(n != 12)
}
setwd('Datasets/Former Class Workbooks/')
parks_classes_18 <- list.files(pattern = '*.csv')
list2env(map(set_names(parks_classes_18, gsub('.csv$', '', parks_classes_18)), read_csv), envir = .GlobalEnv)
all_agencies_classes <- list(Anoka_County, Bloomington, Carver_County, Dakota_County, Minneapolis_Park_and_Recreation_Board, Saint_Paul, Scott_County, Three_Rivers_Park_District, Washington_County)
agencies_class_tidy <- map(all_agencies_classes, tidy_sample_class_wkbk)
agencies_class_bound <- do.call(bind_rows, agencies_class_tidy)
Ramsey_County_Weekday_I <- Ramsey_County_Weekday %>%
mutate(Day_type = 'Weekday')
Ramsey_County_Weekend_I <- Ramsey_County_Weekend %>%
mutate(Day_type = 'Weekend_holiday')
tidy_ramsey_sample_class <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
}
ramsey_classes <- list(Ramsey_County_Weekday_I, Ramsey_County_Weekend_I)
ramsey_class_tidy <- map(ramsey_classes, tidy_ramsey_sample_class)
ramsey_class_bound <- do.call(bind_rows, ramsey_class_tidy)
all_agencies_class_bound <- bind_rows(agencies_class_bound, ramsey_class_bound)
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time)))) %>%
filter(!is.na(Park_trail))
entrances_with_multiple_designations <- all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
# Create dataframe with both day types for every park - specify day-type for join
Weekend_holiday <- c(1:140)
Weekday <- c(1:140)
Parks_day_types <- stack(mget(c('Weekend_holiday', 'Weekday'))) %>% rename(Park_trail = values, Day_type = ind)
# Tidy workbooks
tidy_sample_class_wkbk <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
df_final <- left_join(df_tidy, Parks_day_types, by = c('Park_trail'))
}
# Ensure n always equals 12 (6 timeslots for weekend/holidays, 6 timeslots for weekdays)
check_count <- function(df) {
df %>%
group_by(Park_trail, Entrance) %>%
count() %>%
filter(n != 12)
}
setwd('Datasets/Former Class Workbooks/')
parks_classes_18 <- list.files(pattern = '*.csv')
list2env(map(set_names(parks_classes_18, gsub('.csv$', '', parks_classes_18)), read_csv), envir = .GlobalEnv)
all_agencies_classes <- list(Anoka_County, Bloomington, Carver_County, Dakota_County, Minneapolis_Park_and_Recreation_Board, Saint_Paul, Scott_County, Three_Rivers_Park_District, Washington_County)
agencies_class_tidy <- map(all_agencies_classes, tidy_sample_class_wkbk)
agencies_class_bound <- do.call(bind_rows, agencies_class_tidy)
setwd('Datasets/Former Class Workbooks/')
parks_classes_18 <- list.files(pattern = '*.csv')
list2env(map(set_names(parks_classes_18, gsub('.csv$', '', parks_classes_18)), read_csv), envir = .GlobalEnv)
all_agencies_classes <- list(Anoka_County, Bloomington, Carver_County, Dakota_County, Minneapolis_Park_and_Recreation_Board, Saint_Paul, Scott_County, Three_Rivers_Park_District, Washington_County)
agencies_class_tidy <- map(all_agencies_classes, tidy_sample_class_wkbk)
agencies_class_bound <- do.call(bind_rows, agencies_class_tidy)
Ramsey_County_Weekday_I <- Ramsey_County_Weekday %>%
mutate(Day_type = 'Weekday')
Ramsey_County_Weekend_I <- Ramsey_County_Weekend %>%
mutate(Day_type = 'Weekend_holiday')
tidy_ramsey_sample_class <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
}
ramsey_classes <- list(Ramsey_County_Weekday_I, Ramsey_County_Weekend_I)
ramsey_class_tidy <- map(ramsey_classes, tidy_ramsey_sample_class)
ramsey_class_bound <- do.call(bind_rows, ramsey_class_tidy)
all_agencies_class_bound <- bind_rows(agencies_class_bound, ramsey_class_bound)
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time)))) %>%
filter(!is.na(Park_trail))
entrances_with_multiple_designations <- all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
View(entrances_with_multiple_designations)
# Create dataframe with both day types for every park - specify day-type for join
Weekend_holiday <- c(1:140)
Weekday <- c(1:140)
Parks_day_types <- stack(mget(c('Weekend_holiday', 'Weekday'))) %>% rename(Park_trail = values, Day_type = ind)
# Tidy workbooks
tidy_sample_class_wkbk <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot) & Slot != 0) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
df_final <- left_join(df_tidy, Parks_day_types, by = c('Park_trail'))
}
# Ensure n always equals 12 (6 timeslots for weekend/holidays, 6 timeslots for weekdays)
check_count <- function(df) {
df %>%
group_by(Park_trail, Entrance) %>%
count() %>%
filter(n != 12)
}
setwd('Datasets/Former Class Workbooks/')
parks_classes_18 <- list.files(pattern = '*.csv')
list2env(map(set_names(parks_classes_18, gsub('.csv$', '', parks_classes_18)), read_csv), envir = .GlobalEnv)
all_agencies_classes <- list(Anoka_County, Bloomington, Carver_County, Dakota_County, Minneapolis_Park_and_Recreation_Board, Saint_Paul, Scott_County, Three_Rivers_Park_District, Washington_County)
agencies_class_tidy <- map(all_agencies_classes, tidy_sample_class_wkbk)
agencies_class_bound <- do.call(bind_rows, agencies_class_tidy)
Ramsey_County_Weekday_I <- Ramsey_County_Weekday %>%
mutate(Day_type = 'Weekday')
Ramsey_County_Weekend_I <- Ramsey_County_Weekend %>%
mutate(Day_type = 'Weekend_holiday')
tidy_ramsey_sample_class <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
}
ramsey_classes <- list(Ramsey_County_Weekday_I, Ramsey_County_Weekend_I)
ramsey_class_tidy <- map(ramsey_classes, tidy_ramsey_sample_class)
ramsey_class_bound <- do.call(bind_rows, ramsey_class_tidy)
all_agencies_class_bound <- bind_rows(agencies_class_bound, ramsey_class_bound)
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time))))
View(all_agencies_class_tidy)
entrances_with_multiple_designations <- all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
View(entrances_with_multiple_designations)
# Create dataframe with both day types for every park - specify day-type for join
Weekend_holiday <- c(1:140)
Weekday <- c(1:140)
Parks_day_types <- stack(mget(c('Weekend_holiday', 'Weekday'))) %>% rename(Park_trail = values, Day_type = ind)
# Tidy workbooks
tidy_sample_class_wkbk <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot) & Slot != 0) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
df_final <- left_join(df_tidy, Parks_day_types, by = c('Park_trail'))
}
# Ensure n always equals 12 (6 timeslots for weekend/holidays, 6 timeslots for weekdays)
check_count <- function(df) {
df %>%
group_by(Park_trail, Entrance) %>%
count() %>%
filter(n != 12)
}
setwd('Datasets/Former Class Workbooks/')
parks_classes_18 <- list.files(pattern = '*.csv')
list2env(map(set_names(parks_classes_18, gsub('.csv$', '', parks_classes_18)), read_csv), envir = .GlobalEnv)
all_agencies_classes <- list(Anoka_County, Bloomington, Carver_County, Dakota_County, Minneapolis_Park_and_Recreation_Board, Saint_Paul, Scott_County, Three_Rivers_Park_District, Washington_County)
agencies_class_tidy <- map(all_agencies_classes, tidy_sample_class_wkbk)
agencies_class_bound <- do.call(bind_rows, agencies_class_tidy)
Ramsey_County_Weekday_I <- Ramsey_County_Weekday %>%
mutate(Day_type = 'Weekday')
Ramsey_County_Weekend_I <- Ramsey_County_Weekend %>%
mutate(Day_type = 'Weekend_holiday')
tidy_ramsey_sample_class <- function(df) {
df_tidy <- df %>%
rename(Park_trail = 1, Entrance = 2) %>%
filter(!is.na(Park_trail) & Park_trail != '#7' & Park_trail != 'Multipliers' & Park_trail != 'Trail:' & Park_trail != 'Park:' & Park_trail != 'Entrance #' & Entrance != 'Entrance #' & !is.na(Entrance) & Entrance!= 'new in 2017' & Entrance != 'LAW' & Entrance != 'BAY') %>%
gather(`High 8-10`:`Low 6-8`, key = 'Usage_class_time', value = 'Slot') %>%
filter(!is.na(Slot)) %>%
select(-Slot) %>%
separate(Usage_class_time, into = c('Usage_class', 'Time'), sep = ' ') %>%
separate(Time, into = c('Start_time', 'End_time'), sep = '-') %>%
select(-End_time) %>%
mutate(Dbl_zero = "00") %>%
unite(Start_time_2, Start_time, Dbl_zero, sep = '') %>%
rename(Start_time = Start_time_2) %>%
mutate(Park_trail = as.numeric(Park_trail),
Entrance = as.numeric(Entrance))
}
ramsey_classes <- list(Ramsey_County_Weekday_I, Ramsey_County_Weekend_I)
ramsey_class_tidy <- map(ramsey_classes, tidy_ramsey_sample_class)
ramsey_class_bound <- do.call(bind_rows, ramsey_class_tidy)
all_agencies_class_bound <- bind_rows(agencies_class_bound, ramsey_class_bound)
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time))))
View(all_agencies_class_tidy)
entrances_with_multiple_designations <- all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
all_agencies_class_tidy %>%
filter(is.na(Park_trail))
ramsey_class_bound %>%
filter(is.na(Park_trail))
agencies_class_bound %>%
filter(is.na(Park_trail))
ramsey_class_tidy %>%
select(Park_trail) %>%
unique()
ramsey_class_bound %>%
select(Park_trail) %>%
unique()
ramsey_class_bound %>%
select(Park_trail) %>%
unique()
all_agencies_class_tidy <- all_agencies_class_bound %>%
mutate(Start_time = ifelse(Start_time == 200, 1400,
ifelse(Start_time == 400, 1600,
ifelse(Start_time == 600, 1800, Start_time)))) %>%
filter(!is.na(Park_trail))
entrances_with_multiple_designations <- all_agencies_class_tidy %>%
group_by(Park_trail, Entrance, Start_time, Day_type) %>%
count() %>%
filter(n > 1)
write_csv(all_agencies_class_tidy, '2018 Entrance Usage Classification Index.csv')
agencies_park_cw <- read_csv('Park Names-Numbers Index.csv')
setwd('Datasets/Indices')
agencies_park_cw <- read_csv('Park Names-Numbers Index.csv')
View(agencies_park_cw)
usage_classifications_agency <- left_join(all_agencies_class_tidy, agencies_park_cw, by = c('Park_trail' = 'Park_id'))
View(usage_classifications_agency)
anoka_entrances <- usage_classifications_agency %>%
filter(Agency_id == 1) %>%
select(-Agency_id, -Agency_name)
View(anoka_entrances)
View(agencies_park_cw)
agencies_park_cw %>%
select(Park_id) %>%
unique() %>%
count()
agencies_park_cw %>%
group_by(Park_id) %>%
count() %>%
filter(n >1 )
setwd('Datasets/Indices')
agencies_park_cw <- read_csv('Park Names-Numbers Index.csv')
agencies_park_cw %>%
group_by(Park_id) %>%
count() %>%
filter(n >1 )
usage_classifications_agency <- left_join(all_agencies_class_tidy, agencies_park_cw, by = c('Park_trail' = 'Park_id'))
anoka_entrances <- usage_classifications_agency %>%
filter(Agency_id == 1) %>%
select(-Agency_id, -Agency_name)
